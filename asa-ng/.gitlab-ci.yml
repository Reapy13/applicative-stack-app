image: node:18-alpine
before_script:
    - cd asa-ng

stages:
  # - prepare
  # - build
  # - analyse
  # - test
  - release

# install_packages:
#   stage: prepare
#   script:
#     - npm ci
#   artifacts:
#     paths:
#       - asa-ng/node_modules/*

# build:
#   stage: build
#   needs: [install_packages]
#   script:
#     - npm run build
#   artifacts:
#     paths:
#       - asa-ng/dist/*
  
# sonarqube-check:
#   stage: analyse
#   needs: [install_packages]
#   image: 
#     name: sonarsource/sonar-scanner-cli:latest
#     entrypoint: [""]
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#     GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script: 
#     - sonar-scanner
#   allow_failure: true

# test:
#   stage: test
#   needs: [install_packages]
#   script:
#     - npm run test

build-and-publish-docker-image:
  stage: release
  # needs: [install_packages, build, test]
  image:
    name: docker:24.0.6
  services:
    - docker:24.0.6
  variables:
    DOCKER_HOST: tcp://docker:2375
    IMAGE_NAME: "${NEXUS_DOCKER_REPOSITORY_URL}/asa-ng"
  before_script:
    - apk add --no-cache su-exec
    - set -ex && apk --no-cache add sudo
    - sudo chmod 666 /var/run/docker.sock
    - sudo dockerd
    - docker ps
    - docker login ${NEXUS_DOCKER_REPOSITORY_URL}:${NEXUS_HTTPS_PORT} -u ${DOCKER_CICD_USER} -p ${DOCKER_CICD_PASSWORD}
  script:
    - echo a
    # - docker build . -t=${IMAGE_NAME}
    # - docker push ${IMAGE_NAME}